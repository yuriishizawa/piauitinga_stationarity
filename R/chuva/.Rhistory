install.packages("tmap")
world
q()
help(ggplot)
??ggplot
install.packages("ggplot2","ggalt")
install.packages("ggrides")
install.packages("ggridges")
ggplot(iris, aes(x = Sepal.Length, y = Species)) + geom_density_ridges()
library(ggplot)
library('ggplot')
library('ggplot2')
ggplot(iris, aes(x = Sepal.Length, y = Species)) + geom_density_ridges()
library(ggridges)
ggplot(iris, aes(x = Sepal.Length, y = Species)) + geom_density_ridges()
ggplot(lincoln_weather, aes(x = `Mean Temperature [F]`, y = Month, fill = stat(x))) +
geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01) +
scale_fill_viridis_c(name = "Temp. [F]", option = "C") +
labs(title = 'Temperatures in Lincoln NE in 2016')
install.packages('curl')
install.packages('rsconnect')
install.packages('curl')
install.packages('rsconnect')
install.packages('develtools')
install.packages('devltools')
install.packages('devtools')
sports <- read_tsv("https://github.com/halhen/viz-pub/raw/master/sports-time-of-day/activity.tsv")
library(tidyverse)
library(tidyverse)
sports <- read_tsv("https://github.com/halhen/viz-pub/raw/master/sports-time-of-day/activity.tsv")
library(hrbrthemes)
library(ggalt)
library(tidyverse)
lincoln_weather
View(sports)
a <- lincoln_weather
View(a)
USArrests
plot(USArrests[:,0], USArrests[:,0])
USArrests[:,0]
USArrests[,0]
USArrests[,50]
USArrests[0:,]
USArrests[0:,0:]
USArrests[0:0]
USArrests[]
USArrests['Murder']
plot(USArrests['Murder'], USArrests['Rape'])
USArrests['Rape']
USArrests['Rape'][0]
USArrests['Rape']()
USArrests['Rape'](0)
USArrests['Rape',0]
USArrests['Rape'][5]
x = USArrests['Rape']
x
x[1]
x[0]
x[2]
x[1]
plot(x[1], USArrests['Murder'][1])
install.packages("readxl")
install.packages("Rexcel")
install.packages("openxlsx")
library(readxl)
test = read_excel(path = "/home/yuriishizawa/git/mba_ds/Lectures/Fundamentos de Estatística/Material/planilhaSuporte.xlsx", sheet = "Tabela de Frequências")
View(test)
test["Indivíduo"]
test["Indivíduo", "País de Origem...2"]
test["Indivíduo", "País de Origem"]
test["Indivíduo", "País de Origem..2"]
test["Indivíduo", "País de Origem...2"]
test[2]
test[1:2]
test = test[1:2]
test.mean()
mean(test)
mean(test[2])
mean(test[1])
data.frame(test)
tes1 = data.frame(test)
test1.mean()
mena(teste1)
mean(teste1)
test''
test1
tes1
test
type(test)
test?
q
test.type
test.type()
typeof(test)
hist(test)
hist(test[2])
len(test)
length(test)
length(test[2])
test[2]
test[1]
mean(test[1])
count(test)
test.count()
count.fields(test)
data.frame(test[2])
test1 = data.frame(test[2])
test1.mean
test1.mean()
count(test1)
count.fields(test1)
test1.describe()
describe(test1)
test <- read_excel(path = "/home/yuriishizawa/git/mba_ds/Lectures/Fundamentos de Estatística/Material/planilhaSuporte.xlsx", sheet = "Tabela de Frequências")
test <- c(read_excel(path = "/home/yuriishizawa/git/mba_ds/Lectures/Fundamentos de Estatística/Material/planilhaSuporte.xlsx", sheet = "Tabela de Frequências"))
test1 <- c(test[1:2])
test1
View(test1)
typeof(teste1)
typeof(test1)
test1
test1.count()
count(test1)
count.fields(test1)
test1.mean()
mean(test1)
summary(test1)
summary(test1)
sum(tes1)
grouping(test1)
group_by
aggregate(test1$`País de Origem...2`)
aggregate(test1$`País de Origem...2`, FUN=sum())
aggregate(test1$`País de Origem...2`, FUN=sum
)
aggregate(test1$`País de Origem...2`, FUN=sum)
aggregate(test1$`País de Origem...2`,by=test1$Indivíduo, FUN=sum)
aggregate(test1$`País de Origem...2`,by=list(test1$Indivíduo), FUN=sum)
aggregate(test1$`País de Origem`,by=list(ind = test1$Indivíduo), FUN=sum)
aggregate(test1$'País de Origem'',by=list(ind = test1$Indivíduo), FUN=sum)
)
q
q
''
aggregate(test1$'País de Origem',by=list(ind = test1$Indivíduo), FUN=sum)
aggregate(test1$'País de Origem',by=list(ind = test1$Indivíduo), FUN=mean
)
aggregate(test1$'País de Origem',test1, FUN=sum)
aggregate("País de Origem",test1, FUN=sum)
table(test1)
table(test1[2])
freq = table(test1[2])
freq
freq
freq[1]
freq[1,1]
freq[1;1]
freq[1][1]
freq[1][1][1]
freq[1]
typeof(freq)
typeof(freq)
fre
freq
freq <- freq
freq
freq <- c(freq)
freq
plot(freq)
plot(freq,type = barplot())
plot(freq,type = barplot
)
barplot(freq)
barplot(freq,legend.text = "Países")
barplot(freq,legend.text = "Quantidade de indivíduos")
barplot(freq,legend.text = "Quantidade de indivíduos",border = TRUE)
barplot(freq,legend.text = "Quantidade de indivíduos",border = TRUE)
barplot(freq,legend.text = "Quantidade de indivíduos",grid())
barplot(freq,legend.text = "Quantidade de indivíduos")
library(ggplot2)
ggplot(test1)
ggplot(freq)
df = data.frame(freq)
df
ggplot(df)
ggplot(df)
ggplot(data = df)
ggplot(data = df) + geom_bar(stat="bin")
ggplot(data = df, x = "País de Origem") + geom_bar(stat="bin")
df["País de Origem"]
df["País de origem"]
df[1]
df
plot(df)
plot(freq)
plot(df)
barplot(df)
barplot(freq)
order(freq)
order(freq)
# graphic
plot(x = x, y = dist.t, type = "l")
media_amostra_t <- 16.808
source('~/Downloads/TESTES DE HIPÓTESES - T DE STUDENT.R')
p <- read.table('estancia_chuva.txt', header = T)
bmp(filename = "g_name", width = 400, height = 400)
plot(p[,'ano'],p[,'prec'], type = 'p', xlab = 'Ano', ylab = 'Precipitação acumulada anual (mm)')
points(p[,'ano'],p[,'prec'], col = 'black', pch = 16)
p.res <- pettitt.test(p[,'prec'])
n <- p.res$nobs
i <- p.res$estimate
s.1 <- mean(p[1:i,"prec"])
s.2 <- mean(p[(i+1):n,"prec"])
s.plot1 <- ts(c(rep(s.1,i)))
s.plot2 <- ts(c(rep(s.2,(n-i))))
lines(p[1:i,'ano'],s.plot1, lty=2, col = c('red'))
lines(p[(i+1):n,'ano'],s.plot2, lty=2, col = 'blue')
legend('topleft', legend=c(sprintf("M?dia (%s-%i)",p[1,1],p[i,1]),sprintf("M?dia (%s-%i)",p[i+1,1],p[n,1])),
col=c("red", "blue"), lty=2, cex=0.8)
dev.off()
#Est?ncia
library(trend)
p <- read.table('estancia_chuva.txt', header = T)
p <- read.table('estancia_chuva.txt', header = T)
ls
ls
cd
cd git
p <- read.table('estancia_chuva.txt', header = T)
setwd("~/projects/SBRH_2019/R")
p <- read.table('estancia_chuva.txt', header = T)
setwd("~/projects/SBRH_2019/R/chuva")
bmp(filename = "g_name", width = 400, height = 400)
dev.off()
p <- read.table('estancia_chuva.txt', header = T)
bmp(filename = "g_name", width = 400, height = 400)
plot(p[,'ano'],p[,'prec'], type = 'p', xlab = 'Ano', ylab = 'Precipitação acumulada anual (mm)')
points(p[,'ano'],p[,'prec'], col = 'black', pch = 16)
p.res <- pettitt.test(p[,'prec'])
n <- p.res$nobs
i <- p.res$estimate
s.1 <- mean(p[1:i,"prec"])
s.2 <- mean(p[(i+1):n,"prec"])
s.plot1 <- ts(c(rep(s.1,i)))
s.plot2 <- ts(c(rep(s.2,(n-i))))
lines(p[1:i,'ano'],s.plot1, lty=2, col = c('red'))
lines(p[(i+1):n,'ano'],s.plot2, lty=2, col = 'blue')
legend('topleft', legend=c(sprintf("M?dia (%s-%i)",p[1,1],p[i,1]),sprintf("M?dia (%s-%i)",p[i+1,1],p[n,1])),
col=c("red", "blue"), lty=2, cex=0.8)
dev.off()
p <- read.table('estancia_chuva.txt', header = T)
bmp(filename = "g_name.bmp", width = 400, height = 400)
plot(p[,'ano'],p[,'prec'], type = 'p', xlab = 'Ano', ylab = 'Precipitação acumulada anual (mm)')
points(p[,'ano'],p[,'prec'], col = 'black', pch = 16)
p.res <- pettitt.test(p[,'prec'])
n <- p.res$nobs
i <- p.res$estimate
s.1 <- mean(p[1:i,"prec"])
s.2 <- mean(p[(i+1):n,"prec"])
s.plot1 <- ts(c(rep(s.1,i)))
s.plot2 <- ts(c(rep(s.2,(n-i))))
lines(p[1:i,'ano'],s.plot1, lty=2, col = c('red'))
lines(p[(i+1):n,'ano'],s.plot2, lty=2, col = 'blue')
legend('topleft', legend=c(sprintf("M?dia (%s-%i)",p[1,1],p[i,1]),sprintf("M?dia (%s-%i)",p[i+1,1],p[n,1])),
col=c("red", "blue"), lty=2, cex=0.8)
dev.off()
p <- read.table('estancia_chuva.txt', header = T)
bmp(filename = "g_name.bmp", width = 400, height = 400)
plot(p[,'ano'],p[,'prec'], type = 'p', xlab = 'Ano', ylab = 'Precipitação acumulada anual (mm)')
points(p[,'ano'],p[,'prec'], col = 'black', pch = 16)
p.res <- pettitt.test(p[,'prec'])
n <- p.res$nobs
i <- p.res$estimate
s.1 <- mean(p[1:i,"prec"])
s.2 <- mean(p[(i+1):n,"prec"])
s.plot1 <- ts(c(rep(s.1,i)))
s.plot2 <- ts(c(rep(s.2,(n-i))))
lines(p[1:i,'ano'],s.plot1, lty=2, col = c('red'))
lines(p[(i+1):n,'ano'],s.plot2, lty=2, col = 'blue')
legend('topleft', legend=c(sprintf("Média (%s-%i)",p[1,1],p[i,1]),sprintf("Média (%s-%i)",p[i+1,1],p[n,1])),
col=c("red", "blue"), lty=2, cex=0.8)
dev.off()
View(p.res)
p_res <- pettitt.test(p[,'prec'])
p_res$p.value
pettitt_analysis <- function(p,g_name,bp_name){
bmp(filename = gname, width = 400, height = 400)
plot(p[,'ano'],p[,'prec'], type = 'p', xlab = 'Ano', ylab = 'Precipitação acumulada anual (mm)')
points(p[,'ano'],p[,'prec'], col = 'black', pch = 16)
p_res <- pettitt.test(p[,'prec'])
n <- p_res$nobs
i <- p_res$estimate
p_value <- p_res$p.value
stat_value <- p_res&statistic
data <- p_res&data
s.1 <- mean(p[1:i,"prec"])
s.2 <- mean(p[(i+1):n,"prec"])
s.plot1 <- ts(c(rep(s.1,i)))
s.plot2 <- ts(c(rep(s.2,(n-i))))
lines(p[1:i,'ano'],s.plot1, lty=2, col = c('red'))
lines(p[(i+1):n,'ano'],s.plot2, lty=2, col = 'blue')
legend('topleft', legend=c(sprintf("M?dia (%s-%i)",p[1,1],p[i,1]),sprintf("M?dia (%s-%i)",p[i+1,1],p[n,1])),
col=c("red", "blue"), lty=2, cex=0.8)
dev.off()
return(n,i,)
}
pettitt_analysis <- function(p,g_name,bp_name){
bmp(filename = gname, width = 400, height = 400)
plot(p[,'ano'],p[,'prec'], type = 'p', xlab = 'Ano', ylab = 'Precipitação acumulada anual (mm)')
points(p[,'ano'],p[,'prec'], col = 'black', pch = 16)
p_res <- pettitt.test(p[,'prec'])
n <- p_res$nobs
i <- p_res$estimate
p_value <- p_res$p.value
stat_value <- p_res&statistic
data <- p_res&data
s.1 <- mean(p[1:i,"prec"])
s.2 <- mean(p[(i+1):n,"prec"])
s.plot1 <- ts(c(rep(s.1,i)))
s.plot2 <- ts(c(rep(s.2,(n-i))))
lines(p[1:i,'ano'],s.plot1, lty=2, col = c('red'))
lines(p[(i+1):n,'ano'],s.plot2, lty=2, col = 'blue')
legend('topleft', legend=c(sprintf("M?dia (%s-%i)",p[1,1],p[i,1]),sprintf("M?dia (%s-%i)",p[i+1,1],p[n,1])),
col=c("red", "blue"), lty=2, cex=0.8)
dev.off()
return(n,i)
}
